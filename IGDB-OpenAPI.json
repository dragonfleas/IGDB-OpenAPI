{
  "openapi": "3.0.0",
  "info": {
    "title": "IGDB API",
    "version": "4.0.0",
    "contact": {
      "name": "IGDB Support",
      "url": "https://www.igdb.com/contact",
      "email": "support@igdb.com"
    },
    "license": {
      "url": "https://www.twitch.tv/p/legal/developer-agreement/",
      "name": "Twitch Developer Services Agreement"
    },
    "description": "\"One of the principles behind IGDB.com is accessibility of data. We wish to share the data with anyone who wants to build cool video game oriented websites, apps and services.\n\nThis means that you are not only contributing to the value of IGDB but to thousands of other projects as well. We are looking forward to see what exciting game related projects you come up with. Happy coding!\"\n\nThis OpenAPI documentation and schema project is unofficial and made by [s-crypt.](https://github.com/s-crypt)  \nThe source code is [available here](https://github.com/s-crypt/IGDB-OpenAPI)  \n\nIssues and pull requests are welcome!",
    "termsOfService": "https://www.twitch.tv/p/en/legal/terms-of-service/"
  },
  "externalDocs": {
    "url": "https://api-docs.igdb.com"
  },
  "servers": [
    {
      "url": "https://api.igdb.com/v4",
      "description": "The main base URL for the IGDB API",
      "variables": {}
    },
    {
      "url": "https://id.twitch.tv/oauth2/token?client_id={client_id}&client_secret={client_secret}&grant_type=client_credentials",
      "description": "Twitch Developer Authentication. Only used to obtain an access token for the IGDB API",
      "variables": {
        "client_id": {
          "default": "abcdefg12345"
        },
        "client_secret": {
          "default": "hijklmn67890"
        }
      }
    }
  ],
  "paths": {
    "/age_ratings": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Age Rating according to various rating organizations",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,content_descriptions,rating,rating_cover_url,synopsis;"
            }
          }
        },
        "operationId": "RetrieveAgeRating",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeRating"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/?shell#age-rating"
        }
      }
    },
    "/age_rating_content_descriptions": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Age Rating Descriptors",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,description;"
            }
          }
        },
        "operationId": "RetrieveAgeRatingContentDescription",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeRatingContentDescription"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#age-rating-content-description"
        }
      }
    },
    "/alternative_names": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Alternative and international game titles",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,comment,game,name;"
            }
          }
        },
        "operationId": "RetrieveAlternativeNames",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeNames"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#alternative-name"
        }
      }
    },
    "/artworks": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Official artworks (resolution and aspect ratio may vary)",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alpha_channel,animated,checksum,game,height,image_id,url,width;"
            }
          }
        },
        "operationId": "RetreiveArtwork",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Artwork"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#artwork"
        }
      }
    },
    "/characters": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Video game characters",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields akas,checksum,country_name,created_at,description,games,gender,mug_shot,name,slug,species,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveCharacter",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Character"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#character"
        }
      }
    },
    "/character_mug_shots": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Images depicting game characters",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alpha_channel,animated,checksum,height,image_id,url,width;"
            }
          }
        },
        "operationId": "RetreiveCharacterMugShot",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CharacterMugShot"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#character-mug-shot"
        }
      }
    },
    "/collections": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Collection, AKA Series",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields as_child_relations,as_parent_relations,checksum,created_at,games,name,slug,type,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveCollection",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#collection"
        }
      }
    },
    "/collection_memberships": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "The Collection Memberships.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,collection,created_at,game,type,updated_at;"
            }
          }
        },
        "operationId": "RetreiveCollectionMembership",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionMembership"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#collection-membership"
        }
      }
    },
    "/collection_membership_types": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Enums for collection membership types.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,collection,created_at,game,type,updated_at;"
            }
          }
        },
        "operationId": "RetreiveCollectionMembershipType",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionMembershipType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#collection-membership-type"
        }
      }
    },
    "/collection_relations": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Describes Relationship between Collections.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,child_collection,created_at,parent_collection,type,updated_at;"
            }
          }
        },
        "operationId": "RetreiveCollectionRelation",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionRelation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#collection-relation"
        }
      }
    },
    "/collection_relation_types": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Collection Relation Types",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields allowed_child_type,allowed_parent_type,checksum,created_at,description,name,updated_at;"
            }
          }
        },
        "operationId": "RetreiveCollectionRelationType",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionRelationType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#collection-relation-type"
        }
      }
    },
    "/collection_types": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Enums for collection types.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,description,name,updated_at;"
            }
          }
        },
        "operationId": "RetreiveCollectionType",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#collection-type"
        }
      }
    },
    "/companies": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Video game companies. Both publishers & developers",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields change_date,change_date_category,changed_company_id,checksum,country,created_at,description,developed,logo,name,parent,published,slug,start_date,start_date_category,updated_at,url,websites;"
            }
          }
        },
        "operationId": "RetreiveCompany",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#company"
        }
      }
    },
    "/company_logos": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "The logos of developers and publishers",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alpha_channel,animated,checksum,height,image_id,url,width;"
            }
          }
        },
        "operationId": "RetreiveCompanyLogo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyLogo"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#company-logo"
        }
      }
    },
    "/company_websites": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Company Websites",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,trusted,url;"
            }
          }
        },
        "operationId": "RetreiveCompanyWebsite",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyWebsite"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#company-website"
        }
      }
    },
    "/covers": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "The cover art of games",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alpha_channel,animated,checksum,game,game_localization,height,image_id,url,width;"
            }
          }
        },
        "operationId": "RetreiveCover",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cover"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#cover"
        }
      }
    },
    "/events": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Gaming event like GamesCom, Tokyo Game Show, PAX or GSL",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,description,end_time,event_logo,event_networks,games,live_stream_url,name,slug,start_time,time_zone,updated_at,videos;"
            }
          }
        },
        "operationId": "RetreiveEvents",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#event"
        }
      }
    },
    "/event_logos": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Logo for the event",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alpha_channel,animated,checksum,created_at,event,height,image_id,updated_at,url,width;"
            }
          }
        },
        "operationId": "RetreiveEventLogo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventLogo"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#event-logo"
        }
      }
    },
    "/event_networks": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Urls related to the event like twitter, facebook and youtube",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,event,network_type,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveEventNetwork",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventNetwork"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#event-network"
        }
      }
    },
    "/franchises": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "A list of video game franchises such as Star Wars.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,games,name,slug,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveFranchise",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Franchise"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#franchise"
        }
      }
    },
    "/games": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Video Games!",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields age_ratings,aggregated_rating,aggregated_rating_count,alternative_names,artworks,bundles,category,checksum,collection,collections,cover,created_at,dlcs,expanded_games,expansions,external_games,first_release_date,follows,forks,franchise,franchises,game_engines,game_localizations,game_modes,genres,hypes,involved_companies,keywords,language_supports,multiplayer_modes,name,parent_game,platforms,player_perspectives,ports,rating,rating_count,release_dates,remakes,remasters,screenshots,similar_games,slug,standalone_expansions,status,storyline,summary,tags,themes,total_rating,total_rating_count,updated_at,url,version_parent,version_title,videos,websites;"
            }
          }
        },
        "operationId": "RetreiveGames",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Games"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game"
        }
      }
    },
    "/game_engines": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Video game engines such as unreal engine.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,companies,created_at,description,logo,name,platforms,slug,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveGameEngine",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameEngine"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game-engine"
        }
      }
    },
    "/game_engine_logos": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "The logos of game engines",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alpha_channel,animated,checksum,height,image_id,url,width;"
            }
          }
        },
        "operationId": "RetreiveGameEngineLogo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameEngineLogo"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game-engine-logo"
        }
      }
    },
    "/external_games": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Game IDs on other services",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,countries,created_at,game,media,name,platform,uid,updated_at,url,year;"
            }
          }
        },
        "operationId": "RetreiveExternalGame",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalGame"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#external-game"
        }
      }
    },
    "/game_versions": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Details about game editions and versions.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,features,game,games,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveGameVersion",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameVersion"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game-version"
        }
      }
    },
    "/game_modes": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Single player, Multiplayer etc",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,name,slug,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveGameMode",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameMode"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game-mode"
        }
      }
    },
    "/game_version_features": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Features and descriptions of what makes each version/edition different from the main game",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,description,position,title,values;"
            }
          }
        },
        "operationId": "RetreiveVersionFeatures",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameVersionFeatures"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game-version-feature"
        }
      }
    },
    "/game_version_feature_values": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "The bool/text value of the feature",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,game,game_feature,included_feature,note;"
            }
          }
        },
        "operationId": "RetreiveVersionFeatureValue",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameVersionFeatureValue"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game-version-feature-value"
        }
      }
    },
    "/genres": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Genres of video game",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,name,slug,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveGenre",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Genre"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#genre"
        }
      }
    },
    "/involved_companies": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Companies involved with the game",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,company,created_at,developer,game,porting,publisher,supporting,updated_at;"
            }
          }
        },
        "operationId": "RetreiveInvolvedCompany",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvolvedCompany"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#involved-company"
        }
      }
    },
    "/game_videos": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "A video associated with a game",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,game,name,video_id;"
            }
          }
        },
        "operationId": "RetreiveGameVideo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameVideo"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game-video"
        }
      }
    },
    "/keywords": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Keywords are words or phrases that get tagged to a game such as “world war 2” or “steampunk”.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,name,slug,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveKeyword",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Keyword"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#keyword"
        }
      }
    },
    "/languages": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Languages that are used in the Language Support endpoint.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,locale,name,native_name,updated_at;"
            }
          }
        },
        "operationId": "RetreiveLanguage",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#language"
        }
      }
    },
    "/game_localizations": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Game localization for a game",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,cover,created_at,game,name,region,updated_at;"
            }
          }
        },
        "operationId": "RetreiveGameLocalization",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameLocalization"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game-localization"
        }
      }
    },
    "/language_support_types": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Language Support Types contains the identifiers for the support types that Language Support uses.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,name,updated_at;"
            }
          }
        },
        "operationId": "RetreiveLanguageSupportType",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageSupportType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#language-support-type"
        }
      }
    },
    "/multiplayer_modes": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Data about the supported multiplayer types",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields campaigncoop,checksum,dropin,game,lancoop,offlinecoop,offlinecoopmax,offlinemax,onlinecoop,onlinecoopmax,onlinemax,platform,splitscreen,splitscreenonline;"
            }
          }
        },
        "operationId": "RetreiveMultiplayerMode",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiplayerMode"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#multiplayer-mode"
        }
      }
    },
    "/language_supports": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Games can be played with different languages for voice acting, subtitles, or the interface language.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,game,language,language_support_type,updated_at;"
            }
          }
        },
        "operationId": "RetreiveLanguageSupport",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageSupport"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#language-support"
        }
      }
    },
    "/network_types": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Social networks related to the event like twitter, facebook and youtube",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,event_networks,name,updated_at;"
            }
          }
        },
        "operationId": "RetreiveNetworkType",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#network-type"
        }
      }
    },
    "/platform_families": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "A collection of closely related platforms",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,name,slug;"
            }
          }
        },
        "operationId": "RetreivePlatformFamily",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformFamily"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#platform-family"
        }
      }
    },
    "/platform_logos": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Logo for a platform",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alpha_channel,animated,checksum,height,image_id,url,width;"
            }
          }
        },
        "operationId": "RetreivePlatformLogo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformLogo"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#platform-logo"
        }
      }
    },
    "/platform_versions": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "The platform's version",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,companies,connectivity,cpu,graphics,main_manufacturer,media,memory,name,online,os,output,platform_logo,platform_version_release_dates,resolutions,slug,sound,storage,summary,url;"
            }
          }
        },
        "operationId": "RetreivePlatformVersion",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformVersion"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#platform-version"
        }
      }
    },
    "/platform_version_companies": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "A platform developer",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,comment,company,developer,manufacturer;"
            }
          }
        },
        "operationId": "RetreivePlatformVersionCompany",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformVersionCompany"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#platform-version-company"
        }
      }
    },
    "/platforms": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "The hardware used to run the game or game delivery network",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields abbreviation,alternative_name,category,checksum,created_at,generation,name,platform_family,platform_logo,slug,summary,updated_at,url,versions,websites;"
            }
          }
        },
        "operationId": "RetreivePlatform",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Platform"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#platform"
        }
      }
    },
    "/platform_version_release_dates": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "A handy endpoint that extends platform release dates. Used to dig deeper into release dates, platforms and versions.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,created_at,date,human,m,platform_version,region,updated_at,y;"
            }
          }
        },
        "operationId": "RetreivePlatformVersionReleaseDate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformVersionReleaseDate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#platform-version-release-date"
        }
      }
    },
    "/platform_websites": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "The main website for the platform",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,trusted,url;"
            }
          }
        },
        "operationId": "RetreivePlatformWebsite",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformWebsite"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#platform-website"
        }
      }
    },
    "/player_perspectives": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Player perspectives describe the view/perspective of the player in a video game.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,name,slug,updated_at,url;"
            }
          }
        },
        "operationId": "RetreivePlayerPerspective",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPerspective"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#player-perspective"
        }
      }
    },
    "/regions": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Region for game localization",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,created_at,identifier,name,updated_at;"
            }
          }
        },
        "operationId": "RetreiveRegion",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#region"
        }
      }
    },
    "/release_dates": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "A handy endpoint that extends game release dates. Used to dig deeper into release dates, platforms and versions.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,created_at,date,game,human,m,platform,region,status,updated_at,y;"
            }
          }
        },
        "operationId": "RetreiveReleaseDate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseDate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#release-date"
        }
      }
    },
    "/release_date_statuses": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "An endpoint to provide definition of all of the current release date statuses.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,description,name,updated_at;"
            }
          }
        },
        "operationId": "RetreiveReleaseDateStatus",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseDateStatus"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#release-date-status"
        }
      }
    },
    "/screenshots": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Screenshots of games",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alpha_channel,animated,checksum,game,height,image_id,url,width;"
            }
          }
        },
        "operationId": "RetreiveScreenshot",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Screenshot"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#screenshot"
        }
      }
    },
    "/search": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Search IGDB!",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alternative_name,character,checksum,collection,company,description,game,name,platform,published_at,test_dummy,theme; search \"zelda\";"
            }
          }
        },
        "operationId": "RetreiveSearch",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Search"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#search"
        }
      }
    },
    "/themes": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "Video game themes",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,name,slug,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveTheme",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#theme"
        }
      }
    },
    "/websites": {
      "post": {
        "security": [
          {
            "Authorization_Key": []
          },
          {
            "Client-ID": []
          }
        ],
        "summary": "A website url, usually associated with a game",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,game,trusted,url;"
            }
          }
        },
        "operationId": "RetreiveWebsite",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Website"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/schemas/Responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/schemas/Responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/schemas/Responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/schemas/Responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#website"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AgeRating": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/AgeRatingCategoryEnums"
          },
          "content_descriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgeRatingContentDescription/properties/id"
            },
            "description": "Array of Age Rating Content Description IDs"
          },
          "rating": {
            "$ref": "#/components/schemas/AgeRatingEnums"
          },
          "rating_cover_url": {
            "type": "string",
            "description": "The url for the image of an age rating"
          },
          "synopsis": {
            "type": "string",
            "description": "A free text motivating a rating"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "AgeRatingCategoryEnums": {
        "description": "The organization that has issued a specific rating",
        "type": "number",
        "anyOf": [
          {
            "enum": [
              1
            ],
            "description": "ESRB"
          },
          {
            "enum": [
              2
            ],
            "description": "PEGI"
          },
          {
            "enum": [
              3
            ],
            "description": "CERO"
          },
          {
            "enum": [
              4
            ],
            "description": "USK"
          },
          {
            "enum": [
              5
            ],
            "description": "GRAC"
          },
          {
            "enum": [
              6
            ],
            "description": "CLASS_IND"
          },
          {
            "enum": [
              7
            ],
            "description": "ACB"
          }
        ]
      },
      "AgeRatingEnums": {
        "description": "The age rating assigned by the organization",
        "type": "number",
        "anyOf": [
          {
            "enum": [
              1
            ],
            "description": "Three"
          },
          {
            "enum": [
              2
            ],
            "description": "Seven"
          },
          {
            "enum": [
              3
            ],
            "description": "Twelve"
          },
          {
            "enum": [
              4
            ],
            "description": "Sixteen"
          },
          {
            "enum": [
              5
            ],
            "description": "Eighteen"
          },
          {
            "enum": [
              6
            ],
            "description": "RP"
          },
          {
            "enum": [
              7
            ],
            "description": "EC"
          },
          {
            "enum": [
              8
            ],
            "description": "E"
          },
          {
            "enum": [
              9
            ],
            "description": "E10"
          },
          {
            "enum": [
              10
            ],
            "description": "T"
          },
          {
            "enum": [
              11
            ],
            "description": "M"
          },
          {
            "enum": [
              12
            ],
            "description": "AO"
          },
          {
            "enum": [
              13
            ],
            "description": "CERO_A"
          },
          {
            "enum": [
              14
            ],
            "description": "CERO_B"
          },
          {
            "enum": [
              15
            ],
            "description": "CERO_C"
          },
          {
            "enum": [
              16
            ],
            "description": "CERO_D"
          },
          {
            "enum": [
              17
            ],
            "description": "CERO_Z"
          },
          {
            "enum": [
              18
            ],
            "description": "USK_0"
          },
          {
            "enum": [
              19
            ],
            "description": "USK_6"
          },
          {
            "enum": [
              20
            ],
            "description": "USK_12"
          },
          {
            "enum": [
              21
            ],
            "description": "USK_16"
          },
          {
            "enum": [
              22
            ],
            "description": "USK_18"
          },
          {
            "enum": [
              23
            ],
            "description": "GRAC_ALL"
          },
          {
            "enum": [
              24
            ],
            "description": "GRAC_Twelve"
          },
          {
            "enum": [
              25
            ],
            "description": "GRAC_Fifteen"
          },
          {
            "enum": [
              26
            ],
            "description": "GRAC_Eighteen"
          },
          {
            "enum": [
              27
            ],
            "description": "GRAC_TESTING"
          },
          {
            "enum": [
              28
            ],
            "description": "CLASS_IND_L"
          },
          {
            "enum": [
              29
            ],
            "description": "CLASS_IND_Ten"
          },
          {
            "enum": [
              30
            ],
            "description": "CLASS_IND_Twelve"
          },
          {
            "enum": [
              31
            ],
            "description": "CLASS_IND_Fourteen"
          },
          {
            "enum": [
              32
            ],
            "description": "CLASS_IND_Sixteen"
          },
          {
            "enum": [
              33
            ],
            "description": "CLASS_IND_Eighteen"
          },
          {
            "enum": [
              34
            ],
            "description": "ACB_G"
          },
          {
            "enum": [
              35
            ],
            "description": "ACB_PG"
          },
          {
            "enum": [
              36
            ],
            "description": "ACB_M"
          },
          {
            "enum": [
              37
            ],
            "description": "ACB_MA15"
          },
          {
            "enum": [
              38
            ],
            "description": "ACB_R18"
          },
          {
            "enum": [
              39
            ],
            "description": "ACB_RC"
          }
        ]
      },
      "AgeRatingContentDescription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/AgeRatingContentDescriptionCategoryEnums"
          },
          "description": {
            "type": "string",
            "description": "A string containing the age rating content descriptions"
          },
          "checksum": {
            "type": "string",
            "description": "Hash of the object"
          }
        }
      },
      "AgeRatingContentDescriptionCategoryEnums": {
        "type": "number",
        "description": "The age rating content description enums",
        "anyOf": [
          {
            "enum": [
              1
            ],
            "description": "ESRB_alcohol_reference"
          },
          {
            "enum": [
              2
            ],
            "description": "ESRB_animated_blood"
          },
          {
            "enum": [
              3
            ],
            "description": "ESRB_blood"
          },
          {
            "enum": [
              4
            ],
            "description": "ESRB_blood_and gore"
          },
          {
            "enum": [
              5
            ],
            "description": "ESRB_cartoon_violence"
          },
          {
            "enum": [
              6
            ],
            "description": "ESRB_comic_mischief"
          },
          {
            "enum": [
              7
            ],
            "description": "ESRB_crude_humor"
          },
          {
            "enum": [
              8
            ],
            "description": "ESRB_drug_reference"
          },
          {
            "enum": [
              9
            ],
            "description": "ESRB_fantasy_violence"
          },
          {
            "enum": [
              10
            ],
            "description": "ESRB_intense_violence"
          },
          {
            "enum": [
              11
            ],
            "description": "ESRB_language"
          },
          {
            "enum": [
              12
            ],
            "description": "ESRB_lyrics"
          },
          {
            "enum": [
              13
            ],
            "description": "ESRB_mature_humor"
          },
          {
            "enum": [
              14
            ],
            "description": "ESRB_nudity"
          },
          {
            "enum": [
              15
            ],
            "description": "ESRB_partial_nudity"
          },
          {
            "enum": [
              16
            ],
            "description": "ESRB_real_gambling"
          },
          {
            "enum": [
              17
            ],
            "description": "ESRB_sexual_content"
          },
          {
            "enum": [
              18
            ],
            "description": "ESRB_sexual_themes"
          },
          {
            "enum": [
              19
            ],
            "description": "ESRB_sexual_violence"
          },
          {
            "enum": [
              20
            ],
            "description": "ESRB_simulated_gambling"
          },
          {
            "enum": [
              21
            ],
            "description": "ESRB_strong_language"
          },
          {
            "enum": [
              22
            ],
            "description": "ESRB_strong_lyrics"
          },
          {
            "enum": [
              23
            ],
            "description": "ESRB_strong_sexual content"
          },
          {
            "enum": [
              24
            ],
            "description": "ESRB_suggestive_themes"
          },
          {
            "enum": [
              25
            ],
            "description": "ESRB_tobacco_reference"
          },
          {
            "enum": [
              26
            ],
            "description": "ESRB_use_of alcohol"
          },
          {
            "enum": [
              27
            ],
            "description": "ESRB_use_of drugs"
          },
          {
            "enum": [
              28
            ],
            "description": "ESRB_use_of tobacco"
          },
          {
            "enum": [
              29
            ],
            "description": "ESRB_violence"
          },
          {
            "enum": [
              30
            ],
            "description": "ESRB_violent_references"
          },
          {
            "enum": [
              31
            ],
            "description": "ESRB_animated_violence"
          },
          {
            "enum": [
              32
            ],
            "description": "ESRB_mild_language"
          },
          {
            "enum": [
              33
            ],
            "description": "ESRB_mild_violence"
          },
          {
            "enum": [
              34
            ],
            "description": "ESRB_use_of drugs and alcohol"
          },
          {
            "enum": [
              35
            ],
            "description": "ESRB_drug_and alcohol reference"
          },
          {
            "enum": [
              36
            ],
            "description": "ESRB_mild_suggestive themes"
          },
          {
            "enum": [
              37
            ],
            "description": "ESRB_mild_cartoon violence"
          },
          {
            "enum": [
              38
            ],
            "description": "ESRB_mild_blood"
          },
          {
            "enum": [
              39
            ],
            "description": "ESRB_realistic_blood and gore"
          },
          {
            "enum": [
              40
            ],
            "description": "ESRB_realistic_violence"
          },
          {
            "enum": [
              41
            ],
            "description": "ESRB_alcohol_and tobacco reference"
          },
          {
            "enum": [
              42
            ],
            "description": "ESRB_mature_sexual themes"
          },
          {
            "enum": [
              43
            ],
            "description": "ESRB_mild_animated violence"
          },
          {
            "enum": [
              44
            ],
            "description": "ESRB_mild_sexual themes"
          },
          {
            "enum": [
              45
            ],
            "description": "ESRB_use_of alcohol and tobacco"
          },
          {
            "enum": [
              46
            ],
            "description": "ESRB_animated_blood and gore"
          },
          {
            "enum": [
              47
            ],
            "description": "ESRB_mild_fantasy violence"
          },
          {
            "enum": [
              48
            ],
            "description": "ESRB_mild_lyrics"
          },
          {
            "enum": [
              49
            ],
            "description": "ESRB_realistic_blood"
          },
          {
            "enum": [
              50
            ],
            "description": "PEGI_violence"
          },
          {
            "enum": [
              51
            ],
            "description": "PEGI_sex"
          },
          {
            "enum": [
              52
            ],
            "description": "PEGI_drugs"
          },
          {
            "enum": [
              53
            ],
            "description": "PEGI_fear"
          },
          {
            "enum": [
              54
            ],
            "description": "PEGI_discrimination"
          },
          {
            "enum": [
              55
            ],
            "description": "PEGI_bad_language"
          },
          {
            "enum": [
              56
            ],
            "description": "PEGI_gambling"
          },
          {
            "enum": [
              57
            ],
            "description": "PEGI_online_gameplay"
          },
          {
            "enum": [
              58
            ],
            "description": "PEGI_in_game_purchases"
          },
          {
            "enum": [
              59
            ],
            "description": "CERO_love"
          },
          {
            "enum": [
              60
            ],
            "description": "CERO_sexual_content"
          },
          {
            "enum": [
              61
            ],
            "description": "CERO_violence"
          },
          {
            "enum": [
              62
            ],
            "description": "CERO_horror"
          },
          {
            "enum": [
              63
            ],
            "description": "CERO_drinking_smoking"
          },
          {
            "enum": [
              64
            ],
            "description": "CERO_gambling"
          },
          {
            "enum": [
              65
            ],
            "description": "CERO_crime"
          },
          {
            "enum": [
              66
            ],
            "description": "CERO_controlled_substances"
          },
          {
            "enum": [
              67
            ],
            "description": "CERO_languages_and others"
          },
          {
            "enum": [
              68
            ],
            "description": "GRAC_sexuality"
          },
          {
            "enum": [
              69
            ],
            "description": "GRAC_violence"
          },
          {
            "enum": [
              70
            ],
            "description": "GRAC_fear_horror_threatening"
          },
          {
            "enum": [
              71
            ],
            "description": "GRAC_language"
          },
          {
            "enum": [
              72
            ],
            "description": "GRAC_alcohol_tobacco_drug"
          },
          {
            "enum": [
              73
            ],
            "description": "GRAC_crime_anti_social"
          },
          {
            "enum": [
              74
            ],
            "description": "GRAC_gambling"
          },
          {
            "enum": [
              75
            ],
            "description": "CLASS_IND_violencia"
          },
          {
            "enum": [
              76
            ],
            "description": "CLASS_IND_violencia_extrema"
          },
          {
            "enum": [
              77
            ],
            "description": "CLASS_IND_conteudo_sexual"
          },
          {
            "enum": [
              78
            ],
            "description": "CLASS_IND_nudez"
          },
          {
            "enum": [
              79
            ],
            "description": "CLASS_IND_sexo"
          },
          {
            "enum": [
              80
            ],
            "description": "CLASS_IND_sexo_explicito"
          },
          {
            "enum": [
              81
            ],
            "description": "CLASS_IND_drogas"
          },
          {
            "enum": [
              82
            ],
            "description": "CLASS_IND_drogas_licitas"
          },
          {
            "enum": [
              83
            ],
            "description": "CLASS_IND_drogas_ilicitas"
          },
          {
            "enum": [
              84
            ],
            "description": "CLASS_IND_linguagem_impropria"
          },
          {
            "enum": [
              85
            ],
            "description": "CLASS_IND_atos_criminosos"
          }
        ]
      },
      "AlternativeNames": {
        "type": "object",
        "description": "Alternative and international game titles",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "comment": {
            "type": "string",
            "description": "A description of what kind of alternative name it is. (Acronym, Working title, Japanese title etc)"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "name": {
            "type": "string",
            "description": "An alternative name"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Artwork": {
        "type": "object",
        "description": "Official artworks. Resolution and aspect ratio may vary",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "alpha_channel": {
            "type": "boolean"
          },
          "animated": {
            "type": "boolean"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "The height of the image in pixels"
          },
          "image_id": {
            "type": "string",
            "description": "The ID of the image used to construct an IGDB image link"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "The width of the image in pixels"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Character": {
        "type": "object",
        "description": "Video game characters",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "akas": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Alternative names for a character"
          },
          "country_name": {
            "type": "string",
            "description": "A Character's country of origin"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initally added to the IGDB database"
          },
          "description": {
            "type": "string",
            "description": "Text describing a character"
          },
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "gender": {
            "$ref": "#/components/schemas/CharacterGenderEnum"
          },
          "mug_shot": {
            "$ref": "#/components/schemas/CharacterMugShot/properties/id"
          },
          "name": {
            "type": "string",
            "description": "The character's name"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "species": {
            "$ref": "#/components/schemas/CharacterSpeciesEnum"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "CharacterGenderEnum": {
        "type": "number",
        "description": "An Enum of the character's gender",
        "anyOf": [
          {
            "enum": [
              0
            ],
            "description": "Male"
          },
          {
            "enum": [
              1
            ],
            "description": "Female"
          },
          {
            "enum": [
              2
            ],
            "description": "Other"
          }
        ]
      },
      "CharacterSpeciesEnum": {
        "type": "number",
        "description": "An enum of the Character's species",
        "anyOf": [
          {
            "enum": [
              1
            ],
            "description": "Human"
          },
          {
            "enum": [
              2
            ],
            "description": "Alien"
          },
          {
            "enum": [
              3
            ],
            "description": "Animal"
          },
          {
            "enum": [
              4
            ],
            "description": "Android"
          },
          {
            "enum": [
              5
            ],
            "description": "Unknown"
          }
        ]
      },
      "CharacterMugShot": {
        "type": "object",
        "description": "Images depicting game characters",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "alpha_channel": {
            "type": "boolean"
          },
          "animated": {
            "type": "boolean"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "The height of the image in pixels"
          },
          "image_id": {
            "type": "string",
            "description": "The ID of the image used to construct an IGDB image link"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "The width of the image in pixels"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Collection": {
        "type": "object",
        "description": "Collection, AKA Series",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "as_child_relations": {
            "$ref": "#/components/schemas/CollectionRelation"
          },
          "as_parent_relations": {
            "$ref": "#/components/schemas/CollectionRelation"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initally added to the IGDB database"
          },
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "name": {
            "type": "string",
            "description": "Umbrella term for a collection of games"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "type": {
            "$ref": "#/components/schemas/CollectionType/properties/id"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "CollectionMembership": {
        "type": "object",
        "description": "The collection memberships",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "collection": {
            "type": "string",
            "description": "Reference ID for Collection"
          },
          "type": {
            "$ref": "#/components/schemas/CollectionMembershipType/properties/id"
          },
          "updated_at": {
            "type": "number",
            "format": "url",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initally added to the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "CollectionMembershipType": {
        "type": "object",
        "description": "Enums for collection membership type",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "allowed_collection_type": {
            "$ref": "#/components/schemas/CollectionType"
          },
          "checksum": {
            "type": "string",
            "description": "Hash of the object"
          },
          "created_at": {
            "type": "number",
            "description": "Date this was initally added to the IGDB database"
          },
          "description": {
            "type": "string",
            "description": "Description of the membership type"
          },
          "name": {
            "type": "string",
            "description": "The membership type name"
          },
          "updated_at": {
            "type": "number",
            "description": "The last date this entry was updated in the IGDB database"
          }
        }
      },
      "CollectionRelation": {
        "type": "object",
        "description": "Describes relationship between collections",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "child_collection": {
            "$ref": "#/components/schemas/Collection/properties/id"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initally added to the IGDB database"
          },
          "parent_collection": {
            "$ref": "#/components/schemas/Collection/properties/id"
          },
          "type": {
            "$ref": "#/components/schemas/CollectionRelationType/properties/id"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "CollectionRelationType": {
        "type": "object",
        "description": "Enums for collection membership type",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The membership type name"
          },
          "description": {
            "type": "string",
            "description": "Description of the membership type"
          },
          "allowed_child_type": {
            "$ref": "#/components/schemas/CollectionType/properties/id"
          },
          "allowed_parent_type": {
            "$ref": "#/components/schemas/CollectionType/properties/id"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initally added to the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "CollectionType": {
        "type": "object",
        "description": "Enums for collection membership type",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The membership type name"
          },
          "description": {
            "type": "string",
            "description": "Description of the membership type"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initally added to the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Company": {
        "type": "object",
        "description": "Video game companies, both publishers and developers",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "change_date_category": {
            "$ref": "#/components/schemas/ChangeDateCategoryEnum"
          },
          "change_date": {
            "type": "number",
            "format": "timestamp",
            "description": "The date when a compnay got a new ID"
          },
          "changed_company_id": {
            "type": "string",
            "description": "The new ID for a company that has gone through a merger or restructuring"
          },
          "country": {
            "type": "integer",
            "format": "int32",
            "description": "ISO 3166-1 numeric country code"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initally added to the IGDB database"
          },
          "description": {
            "type": "string",
            "description": "A free text description of the company"
          },
          "developed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "logo": {
            "$ref": "#/components/schemas/CompanyLogo/properties/id"
          },
          "name": {
            "type": "string",
            "description": "The name of the company"
          },
          "parent": {
            "$ref": "#/components/schemas/Company/properties/id"
          },
          "published": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "start_date": {
            "type": "number",
            "format": "timestamp",
            "description": "The date that the company was founded"
          },
          "start_date_category": {
            "$ref": "#/components/schemas/StartDateCategoryEnum"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "websites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyWebsite/properties/id"
            }
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "ChangeDateCategoryEnum": {
        "type": "number",
        "description": "An enum of the date format",
        "anyOf": [
          {
            "enum": [
              0
            ],
            "description": "YYYYMMMMDD"
          },
          {
            "enum": [
              1
            ],
            "description": "YYYYMMMM"
          },
          {
            "enum": [
              2
            ],
            "description": "YYYY"
          },
          {
            "enum": [
              3
            ],
            "description": "YYYYQ1"
          },
          {
            "enum": [
              4
            ],
            "description": "YYYYQ2"
          },
          {
            "enum": [
              5
            ],
            "description": "YYYYQ3"
          },
          {
            "enum": [
              6
            ],
            "description": "YYYYQ4"
          },
          {
            "enum": [
              7
            ],
            "description": "TBD"
          }
        ]
      },
      "StartDateCategoryEnum": {
        "type": "number",
        "description": "An enum of the date format",
        "anyOf": [
          {
            "enum": [
              0
            ],
            "description": "YYYYMMMMDD"
          },
          {
            "enum": [
              1
            ],
            "description": "YYYYMMMM"
          },
          {
            "enum": [
              2
            ],
            "description": "YYYY"
          },
          {
            "enum": [
              3
            ],
            "description": "YYYYQ1"
          },
          {
            "enum": [
              4
            ],
            "description": "YYYYQ2"
          },
          {
            "enum": [
              5
            ],
            "description": "YYYYQ3"
          },
          {
            "enum": [
              6
            ],
            "description": "YYYYQ4"
          },
          {
            "enum": [
              7
            ],
            "description": "TBD"
          }
        ]
      },
      "CompanyLogo": {
        "type": "object",
        "description": "The logos of developers and publishers",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "alpha_channel": {
            "type": "boolean"
          },
          "animated": {
            "type": "boolean"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "The height of the image in pixels"
          },
          "image_id": {
            "type": "string",
            "description": "The ID of the image used to construct an IGDB image link"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "The width of the image in pixels"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "CompanyWebsite": {
        "type": "object",
        "description": "A company's website links",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/CompanyWebsiteEnums"
          },
          "trusted": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "CompanyWebsiteEnums": {
        "type": "number",
        "description": "An enum of the date format",
        "anyOf": [
          {
            "enum": [
              1
            ],
            "description": "official"
          },
          {
            "enum": [
              2
            ],
            "description": "wikia"
          },
          {
            "enum": [
              3
            ],
            "description": "wikipedia"
          },
          {
            "enum": [
              4
            ],
            "description": "facebook"
          },
          {
            "enum": [
              5
            ],
            "description": "twitter"
          },
          {
            "enum": [
              6
            ],
            "description": "twitch"
          },
          {
            "enum": [
              8
            ],
            "description": "instagram"
          },
          {
            "enum": [
              9
            ],
            "description": "youtube"
          },
          {
            "enum": [
              10
            ],
            "description": "iphone"
          },
          {
            "enum": [
              11
            ],
            "description": "ipad"
          },
          {
            "enum": [
              12
            ],
            "description": "android"
          },
          {
            "enum": [
              13
            ],
            "description": "steam"
          },
          {
            "enum": [
              14
            ],
            "description": "reddit"
          },
          {
            "enum": [
              15
            ],
            "description": "itch"
          },
          {
            "enum": [
              16
            ],
            "description": "epicgames"
          },
          {
            "enum": [
              17
            ],
            "description": "gog"
          },
          {
            "enum": [
              18
            ],
            "description": "discord"
          }
        ]
      },
      "Cover": {
        "type": "object",
        "description": "The cover art of games",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "alpha_channel": {
            "type": "boolean"
          },
          "animated": {
            "type": "boolean"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id",
            "description": "The game this cover is associated with. If it is empty then this cover belongs to a game_localization, which can be found under game_localization field"
          },
          "game_localization": {
            "type": "string",
            "description": "Reference ID for Game Localization this cover might be associated with"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "The height of the image in pixels"
          },
          "image_id": {
            "type": "string",
            "description": "The ID of the image used to construct an IGDB image link"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "The width of the image in pixels"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Event": {
        "type": "object",
        "description": "Gaming events like GamesCom, Tokyo Game Show, PAX, or GSL",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The name of the event"
          },
          "description": {
            "type": "string",
            "description": "The description of the event"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "event_logo": {
            "$ref": "#/components/schemas/EventLogo/properties/id"
          },
          "start_time": {
            "type": "number",
            "format": "timestamp",
            "description": "Start time of the event in UTC"
          },
          "end_time": {
            "type": "number",
            "format": "timestamp",
            "description": "End time of the event in UTC"
          },
          "time_zone": {
            "type": "string",
            "description": "Timezone the event is in."
          },
          "live_stream_url": {
            "type": "string",
            "format": "url",
            "description": "URL to the livestream of the event."
          },
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameVideo/properties/id"
            }
          },
          "event_networks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventNetwork/properties/id"
            }
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "EventLogo": {
        "type": "object",
        "description": "Logo for the event",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "event": {
            "$ref": "#/components/schemas/Event/properties/id"
          },
          "alpha_channel": {
            "type": "boolean"
          },
          "animated": {
            "type": "boolean"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "The height of the image in pixels"
          },
          "image_id": {
            "type": "string",
            "description": "The ID of the image used to construct an IGDB image link"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "The width of the image in pixels"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "EventNetwork": {
        "type": "object",
        "description": "URLs related to the event like Twitter, Facebook, and Youtube",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "event": {
            "$ref": "#/components/schemas/Event/properties/id"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "network_type": {
            "$ref": "#/components/schemas/NetworkType/properties/id"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Franchise": {
        "type": "object",
        "description": "A list of video game franchises such as Star Wars",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "name": {
            "type": "string",
            "description": "The name of the franchise"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Games": {
        "type": "object",
        "description": "Video Games!",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "age_ratings": {
            "type": "string",
            "items": {
              "$ref": "#/components/schemas/AgeRatingEnums"
            }
          },
          "aggregated_rating": {
            "type": "number",
            "format": "double",
            "description": "Rating based on external critic scores"
          },
          "aggregated_rating_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of external critic scores"
          },
          "alternative_names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlternativeNames/properties/id"
            }
          },
          "artworks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Artwork/properties/id"
            }
          },
          "bundles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "category": {
            "$ref": "#/components/schemas/GameCategoryEnums"
          },
          "collection": {
            "$ref": "#/components/schemas/Collection/properties/id"
          },
          "collections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Collection/properties/id"
            }
          },
          "cover": {
            "$ref": "#/components/schemas/Cover/properties/id"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "dlcs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "expanded_games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "expansions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "external_games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalGame/properties/id"
            }
          },
          "first_release_date": {
            "type": "number",
            "format": "timestamp",
            "description": "The first release date for this game"
          },
          "follows": {
            "type": "integer",
            "format": "int32",
            "description": "Number of people following a game"
          },
          "forks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "franchise": {
            "type": "string",
            "description": "The main franchise"
          },
          "franchises": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            },
            "description": "Other franchises the game belongs to"
          },
          "game_engines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameEngine/properties/id"
            },
            "description": "The game engine used in this game"
          },
          "game_localizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameLocalization/properties/id"
            },
            "description": "Supported game localizations for this game. A region can have at most one game localization for a given game"
          },
          "game_modes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameMode/properties/id"
            },
            "description": "Modes of gameplay"
          },
          "genres": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Genre/properties/id"
            },
            "description": "Genres of the game"
          },
          "hypes": {
            "type": "integer",
            "format": "int32",
            "description": "Number of follows a game gets before release"
          },
          "involved_companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Company/properties/id"
            },
            "description": "Companies who developed this game"
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Keyword/properties/id"
            },
            "description": "Associated keywords"
          },
          "language_supports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageSupport/properties/id"
            },
            "description": "Supported Languages for this game"
          },
          "multiplayer_modes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultiplayerMode/properties/id"
            },
            "description": "Multiplayer modes for this game"
          },
          "name": {
            "type": "string",
            "description": "The name of the Game"
          },
          "parent_game": {
            "$ref": "#/components/schemas/Games/properties/id",
            "description": "If a DLC, expansion or part of a bundle, this is the main game or bundle"
          },
          "platforms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Platform/properties/id"
            },
            "description": "Platforms this game was released on"
          },
          "player_perspectives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerPerspective/properties/id"
            },
            "description": "The main perspective of the player"
          },
          "ports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            },
            "description": "Ports of this game"
          },
          "rating": {
            "type": "number",
            "format": "double",
            "description": "Average IGDB user rating"
          },
          "rating_count": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of IGDB user ratings"
          },
          "release_dates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReleaseDate/properties/id"
            },
            "description": "Release dates of this game"
          },
          "remakes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            },
            "description": "Remakes of this game"
          },
          "remasters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            },
            "description": "Remasters of this game"
          },
          "screenshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Screenshot/properties/id"
            },
            "description": "Screenshots of this game"
          },
          "similar_games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            },
            "description": "Similar games"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "standalone_expansions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            },
            "description": "Standalone expansions of this game"
          },
          "status": {
            "$ref": "#/components/schemas/GameStatusEnums"
          },
          "storyline": {
            "type": "string",
            "description": "A short description of a games story"
          },
          "summary": {
            "type": "string",
            "description": "A description of the game"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Related entities in the IGDB API"
          },
          "themes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Theme/properties/id"
            },
            "description": "Themes of the game"
          },
          "total_rating": {
            "type": "number",
            "format": "double",
            "description": "Average rating based on both IGDB user and external critic scores"
          },
          "total_rating_count": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of user and external critic scores"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "version_parent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            },
            "description": "If a version, this is the main game"
          },
          "version_title": {
            "type": "string",
            "description": "Title of this version (i.e Gold edition)"
          },
          "videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameVideo/properties/id"
            },
            "description": "Videos of this game"
          },
          "websites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Website/properties/id"
            },
            "description": "Websites associated with this game"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "GameCategoryEnums": {
        "type": "object",
        "description": "A game's category/catagories",
        "anyOf": [
          {
            "enum": [
              0
            ],
            "description": "main_game"
          },
          {
            "enum": [
              1
            ],
            "description": "dlc_addon"
          },
          {
            "enum": [
              2
            ],
            "description": "expansion"
          },
          {
            "enum": [
              3
            ],
            "description": "bundle"
          },
          {
            "enum": [
              4
            ],
            "description": "standalone_expansion"
          },
          {
            "enum": [
              5
            ],
            "description": "mod"
          },
          {
            "enum": [
              6
            ],
            "description": "episode"
          },
          {
            "enum": [
              7
            ],
            "description": "season"
          },
          {
            "enum": [
              8
            ],
            "description": "remake"
          },
          {
            "enum": [
              9
            ],
            "description": "remaster"
          },
          {
            "enum": [
              10
            ],
            "description": "expanded_game"
          },
          {
            "enum": [
              11
            ],
            "description": "port"
          },
          {
            "enum": [
              12
            ],
            "description": "fork"
          },
          {
            "enum": [
              13
            ],
            "description": "pack"
          },
          {
            "enum": [
              14
            ],
            "description": "update"
          }
        ]
      },
      "GameStatusEnums": {
        "type": "object",
        "description": "A game's status",
        "anyOf": [
          {
            "enum": [
              0
            ],
            "description": "released"
          },
          {
            "enum": [
              2
            ],
            "description": "alpha"
          },
          {
            "enum": [
              3
            ],
            "description": "beta"
          },
          {
            "enum": [
              4
            ],
            "description": "early_access"
          },
          {
            "enum": [
              5
            ],
            "description": "offline"
          },
          {
            "enum": [
              6
            ],
            "description": "cancelled"
          },
          {
            "enum": [
              7
            ],
            "description": "rumored"
          },
          {
            "enum": [
              8
            ],
            "description": "delisted"
          }
        ]
      },
      "GameEngine": {
        "type": "object",
        "description": "Video game engines such as unreal engine",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Company/properties/id"
            }
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "description": {
            "type": "string",
            "description": "Description of the game engine"
          },
          "logo": {
            "$ref": "#/components/schemas/GameEngineLogo/properties/id",
            "description": "Logo of the game engine"
          },
          "name": {
            "type": "string",
            "description": "Name of the game engine"
          },
          "platforms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Platform/properties/id"
            },
            "description": "Platforms this game engine was deployed on"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "uuid",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "GameEngineLogo": {
        "type": "object",
        "description": "The logos of developers and publishers",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "alpha_channel": {
            "type": "boolean"
          },
          "animated": {
            "type": "boolean"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "The height of the image in pixels"
          },
          "image_id": {
            "type": "string",
            "description": "The ID of the image used to construct an IGDB image link"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "The width of the image in pixels"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "ExternalGame": {
        "type": "object",
        "description": "Game IDs on other services",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/ExternalGameCategoryEnums",
            "description": "The id of the other service"
          },
          "countries": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The ISO country code of the external game product."
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "media": {
            "$ref": "#/components/schemas/ExternalGameMediaEnums",
            "description": "The media of the external game."
          },
          "name": {
            "type": "string",
            "description": "The name of the game according to the other service"
          },
          "platform": {
            "$ref": "#/components/schemas/Platform/properties/id",
            "description": "The platform of the external game product."
          },
          "uid": {
            "type": "string",
            "description": "The other services ID for this game"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "year": {
            "type": "integer",
            "format": "int32",
            "description": "The year in full (2018)"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "ExternalGameCategoryEnums": {
        "type": "object",
        "description": "The external platform the game is on",
        "anyOf": [
          {
            "enum": [
              1
            ],
            "description": "steam"
          },
          {
            "enum": [
              5
            ],
            "description": "gog"
          },
          {
            "enum": [
              10
            ],
            "description": "youtube"
          },
          {
            "enum": [
              11
            ],
            "description": "microsoft"
          },
          {
            "enum": [
              13
            ],
            "description": "apple"
          },
          {
            "enum": [
              14
            ],
            "description": "twitch"
          },
          {
            "enum": [
              15
            ],
            "description": "android"
          },
          {
            "enum": [
              20
            ],
            "description": "amazon_asin"
          },
          {
            "enum": [
              22
            ],
            "description": "amazon_luna"
          },
          {
            "enum": [
              23
            ],
            "description": "amazon_adg"
          },
          {
            "enum": [
              26
            ],
            "description": "epic_game_store"
          },
          {
            "enum": [
              28
            ],
            "description": "oculus"
          },
          {
            "enum": [
              29
            ],
            "description": "utomik"
          },
          {
            "enum": [
              30
            ],
            "description": "itch_io"
          },
          {
            "enum": [
              31
            ],
            "description": "xbox_marketplace"
          },
          {
            "enum": [
              32
            ],
            "description": "kartridge"
          },
          {
            "enum": [
              36
            ],
            "description": "playstation_store_us"
          },
          {
            "enum": [
              37
            ],
            "description": "focus_entertainment"
          },
          {
            "enum": [
              54
            ],
            "description": "xbox_game_pass_ultimate_cloud"
          },
          {
            "enum": [
              55
            ],
            "description": "gamejolt"
          }
        ]
      },
      "ExternalGameMediaEnums": {
        "type": "object",
        "description": "The type of media",
        "anyOf": [
          {
            "enum": [
              1
            ],
            "description": "digital"
          },
          {
            "enum": [
              2
            ],
            "description": "physical"
          }
        ]
      },
      "GameVersion": {
        "type": "object",
        "description": "Details about game editions and versions. (DLC and more)",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameVersionFeatures/properties/id"
            },
            "description": "Features and descriptions of what makes each version/edition different from the main game"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id",
            "description": "The game these versions/editions are of"
          },
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            },
            "description": "Game Versions and Editions"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "GameMode": {
        "type": "object",
        "description": "Single player, Multiplayer, etc.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "name": {
            "type": "string",
            "description": "The name of the game mode"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "GameVersionFeatures": {
        "type": "object",
        "description": "Features and descriptions of what makes each version/edition different from the main game",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/GameVersionFeatureCategoryEnums",
            "description": "The category of the feature description"
          },
          "description": {
            "type": "string",
            "description": "The description of the feature"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "description": "Position of this feature in the list of features"
          },
          "title": {
            "type": "string",
            "description": "The title of the version/addition/DLC"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameVersionFeatures/properties/id"
            },
            "description": "The bool/text value of the feature"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "GameVersionFeatureCategoryEnums": {
        "type": "object",
        "description": "The data type of feature description",
        "anyOf": [
          {
            "enum": [
              1
            ],
            "description": "boolean"
          },
          {
            "enum": [
              2
            ],
            "description": "description"
          }
        ]
      },
      "GameVersionFeatureValue": {
        "type": "object",
        "description": "The bool/text value of the feature",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "game_feature": {
            "$ref": "#/components/schemas/GameVersionFeatures/properties/id"
          },
          "included_feature": {
            "$ref": "#/components/schemas/GameVersionIncludedFeatureEnums"
          },
          "note": {
            "type": "string",
            "description": "The text value of this feature"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "GameVersionIncludedFeatureEnums": {
        "type": "object",
        "description": "The boole value of this feature",
        "anyOf": [
          {
            "enum": [
              0
            ],
            "description": "NOT_INCLUDED"
          },
          {
            "enum": [
              1
            ],
            "description": "INCLUDED"
          },
          {
            "enum": [
              2
            ],
            "description": "PRE_ORDER_ONLY"
          }
        ]
      },
      "Genre": {
        "type": "object",
        "description": "Genres of video games",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "name": {
            "type": "string",
            "description": "The name of the genre"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "InvolvedCompany": {
        "type": "object",
        "description": "Involved companies",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "company": {
            "$ref": "#/components/schemas/Company/properties/id"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initally added to the IGDB database"
          },
          "developer": {
            "type": "boolean",
            "description": "Is the company a/the developer?"
          },
          "game": {
            "$ref": "#/components/schemas/Company/properties/id"
          },
          "porting": {
            "type": "boolean",
            "description": "Did the company port the game?"
          },
          "publisher": {
            "type": "boolean",
            "description": "Did the company publish the game?"
          },
          "supporting": {
            "type": "boolean",
            "description": "Did the company suppport the game?"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "GameVideo": {
        "type": "object",
        "description": "A video associated with a game",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "name": {
            "type": "string",
            "description": "The name of the video"
          },
          "video_id": {
            "type": "string",
            "description": "The external ID of the video (usually youtube)"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Keyword": {
        "type": "object",
        "description": "Keywords are words or phrases that get tagged to a game such as “world war 2” or “steampunk”.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "name": {
            "type": "string",
            "description": "The keyword"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Language": {
        "type": "object",
        "description": "Languages that are used in the Language Support endpoint.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The name of the localization"
          },
          "native_name": {
            "type": "string",
            "description": "The native name of the language"
          },
          "locale": {
            "type": "string",
            "description": "The combination of Language code and Country code (en-US)"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "GameLocalization": {
        "type": "object",
        "description": "Game localization for a game",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The localized name"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "cover": {
            "$ref": "#/components/schemas/Cover/properties/id",
            "description": "Date this was initially added to the IGDB database"
          },
          "region": {
            "$ref": "#/components/schemas/Region/properties/id",
            "description": "The region ID"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "LanguageSupportType": {
        "type": "object",
        "description": "Language Support Types contains the identifiers for the support types that Language Support uses.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The name of the method of support. (Audio, Subtitles, etc)"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "MultiplayerMode": {
        "type": "object",
        "description": "Data about the supported multiplayer types",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "camapigncoop": {
            "type": "boolean",
            "description": "True if the game supports campaign coop"
          },
          "dropin": {
            "type": "boolean",
            "description": "True if the game supports drop in/out multiplayer"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "lancoop": {
            "type": "boolean",
            "description": "True if the game supports LAN coop"
          },
          "offlinecoop": {
            "type": "integer",
            "description": "True if the game supports offline coop"
          },
          "offliencoopmax": {
            "type": "number",
            "format": "int32",
            "description": "Maximum number of offline players in offline coop"
          },
          "offlinemax": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of players in offline multiplayer"
          },
          "onlinecoop": {
            "type": "boolean",
            "description": "True if the game supports online coop"
          },
          "onlinecoopmax": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of online players in online coop"
          },
          "onlinemax": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of online players in online coop"
          },
          "platform": {
            "$ref": "#/components/schemas/Platform/properties/id"
          },
          "splitscreen": {
            "type": "boolean",
            "description": "True if the game supports, split screen, offline multiplayer"
          },
          "splitscreenonline": {
            "type": "boolean",
            "description": "True if the game supports split screen, online multiplayer"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "LanguageSupport": {
        "type": "object",
        "description": "Games can be played with different languages for voice acting, subtitles, or the interface language.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "language": {
            "$ref": "#/components/schemas/Language/properties/id"
          },
          "language_support_type": {
            "$ref": "#/components/schemas/LanguageSupportType/properties/id"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "NetworkType": {
        "type": "object",
        "description": "Social networks related to the event like twitter, facebook and youtube",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The name of the social network"
          },
          "event_networks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventNetwork/properties/id"
            }
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "PlatformFamily": {
        "type": "object",
        "description": "A collection of closely related platforms",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The name of the platform family"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "PlatformLogo": {
        "type": "object",
        "description": "Logo for a platform",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "alpha_channel": {
            "type": "boolean"
          },
          "animated": {
            "type": "boolean"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "The height of the image in pixels"
          },
          "image_id": {
            "type": "string",
            "description": "The ID of the image used to construct an IGDB image link"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "The width of the image in pixels"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "PlatformVersion": {
        "type": "object",
        "description": "The specific platform and the specifications (Xbox Series X, Playstation 5)",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformVersionCompany/properties/id"
            }
          },
          "connectivity": {
            "type": "string",
            "description": "The network capabilities"
          },
          "cpu": {
            "type": "string",
            "description": "The integrated central processing unit"
          },
          "graphics": {
            "type": "string",
            "description": "The graphics chipset"
          },
          "main_manufacturer": {
            "$ref": "#/components/schemas/PlatformVersionCompany/properties/id"
          },
          "media": {
            "type": "string",
            "description": "The type of media this version accepts"
          },
          "memory": {
            "type": "string",
            "description": "How much memory there is"
          },
          "name": {
            "type": "string",
            "description": "The name of the platform version"
          },
          "online": {
            "type": "string",
            "description": "The online service, like Xbox Live"
          },
          "os": {
            "type": "string",
            "description": "The operating system installed on the platform version"
          },
          "output": {
            "type": "string",
            "description": "The output video rate"
          },
          "platform_logo": {
            "$ref": "#/components/schemas/PlatformLogo/properties/id"
          },
          "platform_version_release_dates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformVersionReleaseDate/properties/id"
            }
          },
          "resolutions": {
            "type": "string",
            "description": "The maximum resolution"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "sound": {
            "type": "string",
            "description": "The sound chipset"
          },
          "storage": {
            "type": "string",
            "description": "How much storage there is"
          },
          "summary": {
            "type": "string",
            "description": "A short summary"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "PlatformVersionCompany": {
        "type": "object",
        "description": "A platform developer",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "comment": {
            "type": "string",
            "description": "Any notable comments about the developer"
          },
          "company": {
            "$ref": "#/components/schemas/Company/properties/id"
          },
          "developer": {
            "type": "boolean",
            "description": "If the company is the developer"
          },
          "manufacturer": {
            "type": "boolean",
            "description": "If the company is the manufactuer"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Platform": {
        "type": "object",
        "description": "The hardware used to run the game or game delivery network",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "abbreviation": {
            "type": "string",
            "description": "An abbreviation of the platform name"
          },
          "alternative_name": {
            "type": "string",
            "description": "An alternative name for the platform"
          },
          "category": {
            "$ref": "#/components/schemas/PlatformCategoryEnums"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "generation": {
            "type": "integer",
            "format": "int32",
            "description": "The generation of the platform"
          },
          "name": {
            "type": "string",
            "description": "The name of the platform"
          },
          "platform_family": {
            "$ref": "#/components/schemas/PlatformFamily/properties/id"
          },
          "platform_logo": {
            "$ref": "#/components/schemas/PlatformLogo/properties/id"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "summary": {
            "type": "string",
            "description": "The summary of the first Version of this platform"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformVersion/properties/id"
            }
          },
          "websites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformWebsite/properties/id"
            }
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "PlatformCategoryEnums": {
        "type": "object",
        "description": "The category of the platform",
        "anyOf": [
          {
            "enum": [
              1
            ],
            "description": "console"
          },
          {
            "enum": [
              2
            ],
            "description": "arcade"
          },
          {
            "enum": [
              3
            ],
            "description": "platform"
          },
          {
            "enum": [
              4
            ],
            "description": "operating_system"
          },
          {
            "enum": [
              5
            ],
            "description": "portable_console"
          },
          {
            "enum": [
              6
            ],
            "description": "computer"
          }
        ]
      },
      "PlatformVersionReleaseDate": {
        "type": "object",
        "description": "A handy endpoint that extends platform release dates. Used to dig deeper into release dates, platforms and versions.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/PlatformVersionReleaseDateEnums"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "date": {
            "type": "string",
            "format": "timestamp",
            "description": "The release date"
          },
          "human": {
            "type": "string",
            "description": "A human readable version of the release date"
          },
          "m": {
            "type": "integer",
            "format": "int32",
            "description": "The month as an integer starting at 1 (January)"
          },
          "platform_version": {
            "$ref": "#/components/schemas/PlatformVersion/properties/id"
          },
          "region": {
            "$ref": "#/components/schemas/PlatformVersionReleaseDateRegionEnum"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "y": {
            "type": "integer",
            "format": "int32",
            "description": "The year in full (2018)"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "PlatformVersionReleaseDateEnums": {
        "type": "number",
        "description": "An enum of the date format",
        "anyOf": [
          {
            "enum": [
              0
            ],
            "description": "YYYYMMMMDD"
          },
          {
            "enum": [
              1
            ],
            "description": "YYYYMMMM"
          },
          {
            "enum": [
              2
            ],
            "description": "YYYY"
          },
          {
            "enum": [
              3
            ],
            "description": "YYYYQ1"
          },
          {
            "enum": [
              4
            ],
            "description": "YYYYQ2"
          },
          {
            "enum": [
              5
            ],
            "description": "YYYYQ3"
          },
          {
            "enum": [
              6
            ],
            "description": "YYYYQ4"
          },
          {
            "enum": [
              7
            ],
            "description": "TBD"
          }
        ]
      },
      "PlatformVersionReleaseDateRegionEnum": {
        "type": "number",
        "description": "An enum of the region for the release date",
        "anyOf": [
          {
            "enum": [
              1
            ],
            "description": "europe"
          },
          {
            "enum": [
              2
            ],
            "description": "north_america"
          },
          {
            "enum": [
              3
            ],
            "description": "austrailia"
          },
          {
            "enum": [
              4
            ],
            "description": "new_zealand"
          },
          {
            "enum": [
              5
            ],
            "description": "japan"
          },
          {
            "enum": [
              6
            ],
            "description": "china"
          },
          {
            "enum": [
              7
            ],
            "description": "asia"
          },
          {
            "enum": [
              8
            ],
            "description": "worldwide"
          },
          {
            "enum": [
              9
            ],
            "description": "korea"
          },
          {
            "enum": [
              10
            ],
            "description": "brazil"
          }
        ]
      },
      "PlatformWebsite": {
        "type": "object",
        "description": "The main website for the platform",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/PlatformWebsiteCategoryEnums"
          },
          "trusted": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The main platform address (URL) of the platform"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "PlatformWebsiteCategoryEnums": {
        "type": "object",
        "description": "The platform website",
        "anyOf": [
          {
            "enum": [
              1
            ],
            "description": "official"
          },
          {
            "enum": [
              2
            ],
            "description": "wikia"
          },
          {
            "enum": [
              3
            ],
            "description": "wikipedia"
          },
          {
            "enum": [
              4
            ],
            "description": "facebook"
          },
          {
            "enum": [
              5
            ],
            "description": "twitter"
          },
          {
            "enum": [
              6
            ],
            "description": "twitch"
          },
          {
            "enum": [
              8
            ],
            "description": "instagram"
          },
          {
            "enum": [
              9
            ],
            "description": "youtube"
          },
          {
            "enum": [
              10
            ],
            "description": "iphone"
          },
          {
            "enum": [
              11
            ],
            "description": "ipad"
          },
          {
            "enum": [
              12
            ],
            "description": "android"
          },
          {
            "enum": [
              13
            ],
            "description": "steam"
          },
          {
            "enum": [
              14
            ],
            "description": "reddit"
          },
          {
            "enum": [
              15
            ],
            "description": "discord"
          },
          {
            "enum": [
              16
            ],
            "description": "google_plus"
          },
          {
            "enum": [
              17
            ],
            "description": "tumblr"
          },
          {
            "enum": [
              18
            ],
            "description": "linkedin"
          },
          {
            "enum": [
              19
            ],
            "description": "pinterest"
          },
          {
            "enum": [
              20
            ],
            "description": "soundcloud"
          }
        ]
      },
      "PlayerPerspective": {
        "type": "object",
        "description": "Player perspectives describe the view/perspective of the player in a video game.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "name": {
            "type": "string",
            "description": "The perspective"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Responses": {
        "BadRequest": {
          "description": "Bad Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Authorization Failure",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "status": {
                    "type": "number"
                  },
                  "cause": {
                    "type": "string"
                  }
                },
                "example": {
                  "title": "Invalid Field",
                  "status": 400,
                  "example": "Invalid field name: 'checksums'"
                }
              }
            }
          }
        },
        "AuthFailure": {
          "description": "Authorization Failure",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Authorization Failure",
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "Tip 1": {
                    "type": "string"
                  },
                  "Tip 2": {
                    "type": "string"
                  },
                  "Tip 3": {
                    "type": "string"
                  },
                  "Docs": {
                    "type": "string",
                    "format": "url"
                  },
                  "Discord": {
                    "type": "string",
                    "format": "url"
                  }
                },
                "example": {
                  "message": "Authorization Failure. Have you tried:",
                  "Tip 1": "Ensure you are sending Authorization and Client-ID as headers.",
                  "Tip 2": "Ensure Authorization value starts with 'Bearer ', including the space",
                  "Tip 3": "Ensure Authorization value ends with the App Access Token you generated, NOT your Client Secret.",
                  "Docs": "https://api-docs.igdb.com/#authentication",
                  "Discord": "https://discord.gg/FrvfwQg"
                }
              }
            }
          }
        },
        "Forbidden": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Forbidden",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "status": {
                    "type": "number"
                  },
                  "cause": {
                    "type": "string"
                  },
                  "details": {
                    "type": "string"
                  }
                },
                "example": {
                  "title": "Forbidden",
                  "status": 403,
                  "cause": "Reqest limit too high",
                  "details": "You typed in 2500 but your maximum is 500"
                }
              }
            }
          }
        },
        "NotFound": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Not Found",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "status": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string"
                  },
                  "details": {
                    "type": "string"
                  }
                },
                "example": {
                  "title": "Not Found",
                  "status": 404,
                  "type": "https://javalin.io/documentation#notfoundresponse",
                  "details": {}
                }
              }
            }
          }
        }
      },
      "Region": {
        "type": "object",
        "description": "Region for game localization",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The name of the region"
          },
          "category": {
            "format": "string",
            "enum": [
              "locale",
              "continent"
            ],
            "description": "Whether the region is a local or continent"
          },
          "identifier": {
            "format": "string",
            "description": "This is the identifier of each region"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "ReleaseDate": {
        "type": "object",
        "description": "A handy endpoint that extends platform release dates. Used to dig deeper into release dates, platforms and versions.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/ReleaseDateCategoryEnums"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "date": {
            "type": "string",
            "format": "timestamp",
            "description": "The release date"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "human": {
            "type": "string",
            "description": "A human readable version of the release date"
          },
          "m": {
            "type": "integer",
            "format": "int32",
            "description": "The month as an integer starting at 1 (January)"
          },
          "platform": {
            "$ref": "#/components/schemas/Platform/properties/id"
          },
          "region": {
            "$ref": "#/components/schemas/ReleaseDateRegionEnum"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "y": {
            "type": "integer",
            "format": "int32",
            "description": "The year in full (2018)"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "ReleaseDateCategoryEnums": {
        "type": "number",
        "description": "An enum of the date format",
        "anyOf": [
          {
            "enum": [
              0
            ],
            "description": "YYYYMMMMDD"
          },
          {
            "enum": [
              1
            ],
            "description": "YYYYMMMM"
          },
          {
            "enum": [
              2
            ],
            "description": "YYYY"
          },
          {
            "enum": [
              3
            ],
            "description": "YYYYQ1"
          },
          {
            "enum": [
              4
            ],
            "description": "YYYYQ2"
          },
          {
            "enum": [
              5
            ],
            "description": "YYYYQ3"
          },
          {
            "enum": [
              6
            ],
            "description": "YYYYQ4"
          },
          {
            "enum": [
              7
            ],
            "description": "TBD"
          }
        ]
      },
      "ReleaseDateRegionEnum": {
        "type": "number",
        "description": "An enum of the region for the release date",
        "anyOf": [
          {
            "enum": [
              1
            ],
            "description": "europe"
          },
          {
            "enum": [
              2
            ],
            "description": "north_america"
          },
          {
            "enum": [
              3
            ],
            "description": "austrailia"
          },
          {
            "enum": [
              4
            ],
            "description": "new_zealand"
          },
          {
            "enum": [
              5
            ],
            "description": "japan"
          },
          {
            "enum": [
              6
            ],
            "description": "china"
          },
          {
            "enum": [
              7
            ],
            "description": "asia"
          },
          {
            "enum": [
              8
            ],
            "description": "worldwide"
          },
          {
            "enum": [
              9
            ],
            "description": "korea"
          },
          {
            "enum": [
              10
            ],
            "description": "brazil"
          }
        ]
      },
      "ReleaseDateStatus": {
        "type": "object",
        "description": "An endpoint to provide definition of all of the current release date statuses.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The name of the release date status"
          },
          "description": {
            "type": "string",
            "description": "The description of the release date status."
          },
          "created_at": {
            "type": "number",
            "format": "date",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Screenshot": {
        "type": "object",
        "description": "Screenshots of games",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "alpha_channel": {
            "type": "boolean"
          },
          "animated": {
            "type": "boolean"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "The height of the image in pixels"
          },
          "image_id": {
            "type": "string",
            "description": "The ID of the image used to construct an IGDB image link"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "The width of the image in pixels"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Search": {
        "type": "object",
        "description": "Search IGDB and get the IDs of items matching your search",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "alternative_name": {
            "type": "string"
          },
          "character": {
            "$ref": "#/components/schemas/Character/properties/id"
          },
          "collection": {
            "$ref": "#/components/schemas/Collection/properties/id"
          },
          "company": {
            "$ref": "#/components/schemas/Company/properties/id"
          },
          "description": {
            "type": "string"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "name": {
            "type": "string"
          },
          "platform": {
            "$ref": "#/components/schemas/Platform/properties/id"
          },
          "published_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The date this item was initally published by the third party"
          },
          "test_dummy": {
            "type": "number",
            "description": "Reference ID for Test Dummy"
          },
          "theme": {
            "$ref": "#/components/schemas/Theme/properties/id"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Theme": {
        "type": "object",
        "description": "Video game themes",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The name of the theme"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Website": {
        "type": "object",
        "description": "A website URL, usually associated with a game",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/WebsiteCategoryEnums"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "trusted": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The main platform address (URL) of the platform"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "WebsiteCategoryEnums": {
        "type": "object",
        "description": "The platform website",
        "anyOf": [
          {
            "enum": [
              1
            ],
            "description": "official"
          },
          {
            "enum": [
              2
            ],
            "description": "wikia"
          },
          {
            "enum": [
              3
            ],
            "description": "wikipedia"
          },
          {
            "enum": [
              4
            ],
            "description": "facebook"
          },
          {
            "enum": [
              5
            ],
            "description": "twitter"
          },
          {
            "enum": [
              6
            ],
            "description": "twitch"
          },
          {
            "enum": [
              8
            ],
            "description": "instagram"
          },
          {
            "enum": [
              9
            ],
            "description": "youtube"
          },
          {
            "enum": [
              10
            ],
            "description": "iphone"
          },
          {
            "enum": [
              11
            ],
            "description": "ipad"
          },
          {
            "enum": [
              12
            ],
            "description": "android"
          },
          {
            "enum": [
              13
            ],
            "description": "steam"
          },
          {
            "enum": [
              14
            ],
            "description": "reddit"
          },
          {
            "enum": [
              15
            ],
            "description": "itch"
          },
          {
            "enum": [
              16
            ],
            "description": "epicgames"
          },
          {
            "enum": [
              17
            ],
            "description": "gog"
          },
          {
            "enum": [
              18
            ],
            "description": "discord"
          }
        ]
      }
    },
    "securitySchemes": {
      "Authorization_Key": {
        "type": "http",
        "in": "header",
        "name": "Authorization",
        "scheme": "Bearer"
      },
      "Client-ID": {
        "type": "apiKey",
        "name": "Client-ID",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "Endpoints"
    }
  ]
}